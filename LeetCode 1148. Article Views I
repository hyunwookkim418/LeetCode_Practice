#1
select distinct author_id as id
from Views
where author_id = viewer_id
order by id;

#2 not effective and slower
select v1.author_id as id
from Views v1
inner join Views v2
on v1.author_id = v2.viewer_id and v1.author_id = v2.author_id
group by v1.author_id
order by v1.author_id

# My explanation

This problem asks us to select the author_id as id of those who view at least their own articles. A table named Views is given, which has author_id and viewer_id columns. If author_id is equal to viewer_id, it means that the author views their own article. The SQL code to achieve this is simple. We can use:

SELECT DISTINCT author_id AS id
FROM Views
WHERE author_id = viewer_id
ORDER BY id;

Here's a breakdown of the code:
-Select author_id as id: We use SELECT author_id AS id to rename the column author_id to id in the result set.
-Condition: We apply the condition WHERE author_id = viewer_id to filter rows where the author is viewing their own article.
-Remove duplicates: We use the DISTINCT keyword to ensure there are no duplicate author_id values in the output.
-Order the results: The ORDER BY id clause sorts the results in ascending order by id. Note that ORDER BY sorts in ascending order by default, so the ASC keyword is optional.

This SQL query will provide the desired output without duplicates and in ascending order.
